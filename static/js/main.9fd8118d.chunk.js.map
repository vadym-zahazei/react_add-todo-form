{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","visibleTodos","todosId","App","useState","setUserId","setTitle","isCorrectUser","setIsCorrectUser","isCorrectTitle","setIsCorrectTitle","action","method","onSubmit","event","preventDefault","trim","newTodo","Math","max","push","getTodo","type","value","placeholder","onChange","target","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fd8118d.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user: { name, email } }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo:\n  {\n    id,\n    title,\n    completed,\n    user,\n  },\n}) => {\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo', 'card',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section\n      className=\"TodoList\"\n    >\n      {\n        todos.map(todo => (\n          <TodoInfo todo={todo} key={todo.id} />\n        ))\n      }\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport 'bulma/css/bulma.min.css';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst visibleTodos: Todo[] = todosFromServer\n  .map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\nconst todosId = visibleTodos.map(({ id }) => id);\n\nexport const App = () => {\n  const [userId, setUserId] = useState(0);\n  const [title, setTitle] = useState('');\n  const [isCorrectUser, setIsCorrectUser] = useState(true);\n  const [isCorrectTitle, setIsCorrectTitle] = useState(true);\n\n  const getTodo = (): void => {\n    const newTodo: Todo = {\n      id: Math.max(...todosId) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    visibleTodos.push(newTodo);\n  };\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsCorrectTitle(true);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+(event.target.value));\n    setIsCorrectUser(true);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setIsCorrectUser(false);\n    }\n\n    if (!title.trim()) {\n      setIsCorrectTitle(false);\n    }\n\n    if (!userId || !title.trim()) {\n      return;\n    }\n\n    getTodo();\n\n    setUserId(0);\n    setTitle('');\n    setIsCorrectTitle(true);\n    setIsCorrectUser(true);\n  };\n\n  return (\n    <div className=\"App box\">\n      <h1 className=\"title\">Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n        className=\"field\"\n      >\n        <div className=\"field column is-two-fifths\">\n          <label className=\"label\">\n            <span>{'Title: '}</span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              className=\"input is-link \"\n              value={title}\n              placeholder=\"Enter a title\"\n              onChange={handleChangeTitle}\n            />\n            {\n              isCorrectTitle\n              || <span className=\"error\">Please enter a title</span>\n            }\n          </label>\n        </div>\n\n        <div className=\"field column is-half\">\n          <label className=\"label\">\n\n            <p>{'User: '}</p>\n            <div className=\"select is-norma\">\n              <select\n                data-cy=\"userSelect\"\n                defaultValue={userId}\n                value={userId}\n                onChange={handleChangeUser}\n              >\n                <option value=\"0\" disabled>Choose a user</option>\n\n                {\n                  usersFromServer.map(({ name, id }) => (\n                    <option\n                      value={id}\n                      key={id}\n                    >\n                      {name}\n                    </option>\n                  ))\n                }\n              </select>\n            </div>\n          </label>\n\n          {\n            isCorrectUser\n            || <span className=\"error\">Please choose a user</span>\n          }\n        </div>\n        <div className=\"buttons column\">\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            className={classNames('button is-primary is-focused',\n              {\n                'is-danger': isCorrectTitle === false\n                || isCorrectUser === false,\n              })}\n          >\n            Add\n          </button>\n        </div>\n\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}